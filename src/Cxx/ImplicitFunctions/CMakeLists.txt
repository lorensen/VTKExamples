project (${WIKI}ImplicitFunctions)

if(NOT WikiExamples_BINARY_DIR)
find_package(VTK REQUIRED)
if(NOT VTK_USE_RENDERING)
  message(FATAL_ERROR "Example ${PROJECT_NAME} requires VTK_USE_RENDERING.")
endif()
include(${VTK_USE_FILE})
endif()

if("${VTK_MAJOR_VERSION}.${VTK_MINOR_VERSION}" LESS 5.8)
  set(KIT_LIBS vtkHybrid vtkWidgets)
else()
  set(KIT_LIBS ${VTK_LIBRARIES})
endif()

#
# Build all .cxx files in the directory
file(GLOB ALL_FILES *.cxx)

# VTK follows the C++03 standard but some examples require C++11
include(${WikiExamples_SOURCE_DIR}/CMake/RequiresCxxVersion.cmake)
Requires_CxxVersion(ImplicitSphere 11 ALL_FILES)

foreach(SOURCE_FILE ${ALL_FILES})
  string(REPLACE ".cxx" "" TMP ${SOURCE_FILE})
  string(REPLACE ${CMAKE_CURRENT_SOURCE_DIR}/ "" EXAMPLE ${TMP})
  add_executable(${WIKI}${EXAMPLE} ${EXECUTABLE_FLAG} ${EXAMPLE}.cxx)
  target_link_libraries(${WIKI}${EXAMPLE} ${KIT_LIBS})
endforeach()

if (BUILD_TESTING)
# Testing
set(KIT ImplicitFunctions)
set(NEEDS_ARGS
    SampleFunction
)

add_test(${KIT}-SampleFunction ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${KIT}CxxTests
  TestSampleFunction -E 30)

include(${WikiExamples_SOURCE_DIR}/CMake/ExamplesTesting.cmake)
endif()
